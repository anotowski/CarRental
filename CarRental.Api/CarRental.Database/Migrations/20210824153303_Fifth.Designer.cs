// <auto-generated />
using System;
using CarRental.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CarRental.Database.Migrations
{
    [DbContext(typeof(CarRentalContext))]
    [Migration("20210824153303_Fifth")]
    partial class Fifth
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CarRental.Database.Models.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("BaseDayRentalFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<int>("CurrentMileage")
                        .HasColumnType("int");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<decimal>("KilometerFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ModelName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlateNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("PlateNumber")
                        .IsUnique();

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BaseDayRentalFee = 120m,
                            Brand = "Volvo",
                            Category = 2,
                            CurrentMileage = 0,
                            IsAvailable = true,
                            KilometerFee = 5m,
                            ModelName = "S90",
                            PlateNumber = "CarRental001"
                        },
                        new
                        {
                            Id = 2,
                            BaseDayRentalFee = 125m,
                            Brand = "BMW",
                            Category = 2,
                            CurrentMileage = 0,
                            IsAvailable = true,
                            KilometerFee = 5.65m,
                            ModelName = "M8 Competition",
                            PlateNumber = "CarRental002"
                        },
                        new
                        {
                            Id = 3,
                            BaseDayRentalFee = 55m,
                            Brand = "Hyundai",
                            Category = 1,
                            CurrentMileage = 0,
                            IsAvailable = true,
                            KilometerFee = 3.99m,
                            ModelName = "i30",
                            PlateNumber = "CarRental003"
                        },
                        new
                        {
                            Id = 4,
                            BaseDayRentalFee = 68.99m,
                            Brand = "Volkswagen",
                            Category = 3,
                            CurrentMileage = 0,
                            IsAvailable = true,
                            KilometerFee = 3m,
                            ModelName = "T6 California",
                            PlateNumber = "CarRental004"
                        });
                });

            modelBuilder.Entity("CarRental.Database.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("CarRental.Database.Models.RentalHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BookingNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("MileageOnRentalEnd")
                        .HasColumnType("int");

                    b.Property<int>("MileageOnRentalStart")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RentEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RentStartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("CustomerId");

                    b.ToTable("RentalHistories");
                });

            modelBuilder.Entity("CarRental.Database.Models.RentalHistory", b =>
                {
                    b.HasOne("CarRental.Database.Models.Car", null)
                        .WithMany("RentalHistories")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarRental.Database.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("CarRental.Database.Models.Car", b =>
                {
                    b.Navigation("RentalHistories");
                });
#pragma warning restore 612, 618
        }
    }
}
